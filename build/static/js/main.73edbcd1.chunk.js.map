{"version":3,"sources":["hooks/useD3.js","components/BarChart/index.js","components/Input/index.js","components/Label/index.js","fetch.js","getCharacter.js","App.js","index.js"],"names":["useD3","renderChartFn","dependencies","ref","React","useRef","useEffect","d3","current","BarChart","data","svg","margin","console","log","x","domain","map","d","name","rangeRound","padding","y1","height","select","call","g","attr","tickValues","tickSizeOuter","style","ticks","remove","append","text","selectAll","join","bandwidth","length","width","marginRight","marginLeft","className","Input","props","min","max","value","type","id","Label","htmlFor","fetchData","url","a","fetch","res","json","characterDetails","Promise","resolve","then","promises","Object","values","results","item","all","el","weight","catch","err","App","useState","pokemonData","setPokemonData","e","preventDefault","value1","target","inputData","onSubmit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73edbcd1.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst useD3 = (renderChartFn, dependencies) => {\r\n    const ref = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        renderChartFn(d3.select(ref.current));\r\n        return () => {};\r\n        // eslint-disable-next-line\r\n    }, dependencies);\r\n    return ref;\r\n};\r\n\r\nexport default useD3;\r\n","import * as d3 from 'd3';\r\nimport useD3 from '../../hooks/useD3';\r\n\r\nfunction BarChart({ data }) {\r\n    const ref = useD3(\r\n        (svg) => {\r\n            const height = 500;\r\n            const width = 1500;\r\n            const margin = { top: 20, right: 30, bottom: 30, left: 40 };\r\n\r\n            console.log(data);\r\n\r\n            const x = d3\r\n                .scaleBand()\r\n                .domain(data.map((d) => d.name))\r\n                .rangeRound([margin.left, width - margin.right])\r\n                .padding(0.5);\r\n\r\n            const y1 = d3\r\n                .scaleLinear()\r\n                .domain([0, d3.max(data, (d) => d.height)])\r\n                .rangeRound([height - margin.bottom, margin.top]);\r\n\r\n            const xAxis = (g) =>\r\n                g.attr('transform', `translate(0,${height - margin.bottom})`).call(\r\n                    d3\r\n                        .axisBottom(x)\r\n                        .tickValues(\r\n                            data.map(function (d) {\r\n                                return d.name;\r\n                            }),\r\n                        )\r\n                        .tickSizeOuter(0),\r\n                );\r\n\r\n            const y1Axis = (g) =>\r\n                g\r\n                    .attr('transform', `translate(${margin.left}, 0)`)\r\n                    .style('color', '#440099')\r\n                    .call(d3.axisLeft(y1).ticks(null, 's'))\r\n                    .call((g) => g.select('.domain').remove())\r\n                    .call((g) =>\r\n                        g\r\n                            .append('text')\r\n                            .attr('x', -margin.left)\r\n                            .attr('y', 10)\r\n                            .attr('fill', 'currentColor')\r\n                            .attr('text-anchor', 'start')\r\n                            .text(data.y1),\r\n                    );\r\n\r\n            svg.select('.x-axis').call(xAxis);\r\n            svg.select('.y-axis').call(y1Axis);\r\n\r\n            svg.select('.plot-area')\r\n                .attr('fill', '#6b09df')\r\n                .selectAll('.bar')\r\n                .data(data)\r\n                .join('rect')\r\n                .attr('class', 'bar')\r\n                .attr('x', (d) => x(d.name))\r\n                .attr('width', x.bandwidth())\r\n                .attr('y', (d) => y1(d.height))\r\n                .attr('height', (d) => y1(0) - y1(d.height));\r\n        },\r\n        [data.length],\r\n    );\r\n\r\n    return (\r\n        <svg\r\n            ref={ref}\r\n            style={{\r\n                height: 500,\r\n                width: '100%',\r\n                marginRight: '0px',\r\n                marginLeft: '0px',\r\n            }}\r\n        >\r\n            <g className=\"plot-area\" />\r\n            <g className=\"x-axis\" />\r\n            <g className=\"y-axis\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default BarChart;\r\n","function Input(props) {\r\n    const { name, min, max, value } = props;\r\n    return (\r\n        <>\r\n            <input type=\"number\" id={name} name={name} min={min} max={max} value={value}></input>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","function Label(props) {\r\n    const { name, value } = props;\r\n    return (\r\n        <>\r\n            <label htmlFor={name}>{value}</label>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Label;\r\n","async function fetchData(url) {\r\n    try {\r\n        let res = await fetch(url);\r\n        return await res.json();\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { fetchData };\r\n","import { fetchData } from './fetch.js';\r\n\r\nfunction characterDetails(url) {\r\n    return new Promise((resolve) => {\r\n        fetchData(url)\r\n            .then((data) => {\r\n                const promises = Object.values(data.results).map((item) => fetchData(item.url));\r\n                return Promise.all(promises)\r\n                    .then((d) => {\r\n                        resolve(\r\n                            d.map((el) => ({\r\n                                name: el.name,\r\n                                height: el.height / 10, // In meters\r\n                                weight: el.weight / 10, // in KG\r\n                            })),\r\n                        );\r\n                    })\r\n                    .catch((err) => console.log(err));\r\n            })\r\n            .catch((err) => console.log(err));\r\n    });\r\n}\r\n\r\nfunction getSingleCharacter(array, characterName) {\r\n    let result = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (characterName === `${array[i].name}`) {\r\n            result.push(array[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport { characterDetails, getSingleCharacter };\r\n","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport BarChart from './components/BarChart/index.js';\r\nimport Input from './components/Input/index.js';\r\nimport Label from './components/Label/index.js';\r\nimport { characterDetails } from './getCharacter';\r\n\r\nfunction App() {\r\n    let firstGenerationPokeURL = 'https://pokeapi.co/api/v2/pokemon?limit=10';\r\n\r\n    const [pokemonData, setPokemonData] = useState();\r\n\r\n    useEffect(() => {\r\n        // getData(firstGenerationPokeURL);\r\n        characterDetails(firstGenerationPokeURL).then((d) => {\r\n            console.log(d);\r\n            setPokemonData(d);\r\n        });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(pokemonData);\r\n    }, [pokemonData]);\r\n\r\n    async function handleURL(e) {\r\n        e.preventDefault();\r\n        let value1 = e.target[0].value;\r\n        console.log(value1);\r\n        const inputData = await characterDetails(`https://pokeapi.co/api/v2/pokemon?limit=${value1}`);\r\n        setPokemonData(inputData);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Pokemon Height/Weight comparison</h1>\r\n            <form onSubmit={handleURL}>\r\n                <Label name=\"Value\" value={`Max value`}></Label>\r\n                <br></br>\r\n                <Input name=\"first-value\" min=\"1\" max=\"30\"></Input>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            {pokemonData && <BarChart data={pokemonData}></BarChart>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}